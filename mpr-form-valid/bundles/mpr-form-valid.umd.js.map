{"version":3,"file":"mpr-form-valid.umd.js.map","sources":["ng://mpr-form-valid/lib/services/global-valid-msg.service.ts","ng://mpr-form-valid/lib/services/form-valid-msg.service.ts","ng://mpr-form-valid/lib/services/global-valid.service.ts","ng://mpr-form-valid/lib/form-control-valid/form-control-valid.component.ts","ng://mpr-form-valid/lib/directives/form-valid-msg.directive.ts","ng://mpr-form-valid/lib/validtors/isbn-validtor.directive.ts","ng://mpr-form-valid/lib/validtors/isbn-part-valid.directive.ts","ng://mpr-form-valid/lib/validtors/isbn-header-valid.directive.ts","ng://mpr-form-valid/lib/validtors/float-only-validtor.directive.ts","ng://mpr-form-valid/lib/directives/form-group.directive.ts","ng://mpr-form-valid/lib/directives/form.directive.ts","ng://mpr-form-valid/lib/form-valid.module.ts","ng://mpr-form-valid/public_api.ts"],"sourcesContent":["/**\r\n * å¨å±éªè¯æ¶æ¯ï¼ å­å¨é»è®¤æ¶æ¯\r\n */\r\nexport class GlobalValidMsgService {\r\n\tprivate validMsg = new Map<String, String>();\r\n\tconstructor() {}\r\n\r\n\t/**\r\n   * è®¾ç½®éè¯¯keyçé»è®¤æ¶æ¯\r\n   * @param msgKey éè¯¯key\r\n   * @param msgValue éè¯¯æ¶æ¯\r\n   */\r\n\tpublic registerMsg(msgKey: string, msgValue: string) {\r\n\t\tif (!msgKey || !msgValue) {\r\n\t\t\tthrow new Error('msg key and value must not empty');\r\n\t\t}\r\n\t\tthis.validMsg.set(msgKey.toLowerCase(), msgValue);\r\n\t}\r\n\r\n\tpublic getMsg(msgKey: string) {\r\n\t\tif (!msgKey) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.validMsg.get(msgKey.toLowerCase());\r\n\t}\r\n}\r\n\r\nexport const globalValidMsgServ = new GlobalValidMsgService();\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { globalValidMsgServ } from './global-valid-msg.service';\r\n\r\n@Injectable()\r\nexport class FormValidMsgService {\r\n  private validMsg = {};\r\n  constructor() {}\r\n\r\n  public setValidMsg(msgKey: string, msgValue: string) {\r\n    if (!msgValue) {\r\n      return;\r\n    }\r\n    this.validMsg[msgKey.toLowerCase()] = msgValue;\r\n  }\r\n\r\n  public getValidMsg(msgPath: string, error) {\r\n    let minWeight = Number.MAX_VALUE;\r\n    let errorMsg = '';\r\n    let tmpMsg;\r\n    let tmpWeight;\r\n    msgPath = (msgPath || '').toLowerCase();\r\n    if (!error || !msgPath) {\r\n      return { errorMsg, minWeight };\r\n    }\r\n\r\n    for (let name in error) {\r\n      if (!error.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      const orgName = name;\r\n      name = name.toLowerCase();\r\n      tmpMsg = this.formartMsg(this.validMsg[msgPath + '.' + name] || globalValidMsgServ.getMsg(name), error[orgName]);\r\n      if (!tmpMsg) {\r\n        continue;\r\n      }\r\n      if (Number.isNaN(Number(error[name]))) {\r\n        tmpWeight = 1000;\r\n      } else {\r\n        tmpWeight = Number(error[name]);\r\n      }\r\n      if (tmpWeight < minWeight) {\r\n        minWeight = tmpWeight;\r\n        errorMsg = tmpMsg;\r\n      }\r\n    }\r\n    return { errorMsg, minWeight };\r\n  }\r\n\r\n  public formartMsg(msg: string, value: any) {\r\n    if (typeof value !== 'object' || !value) {\r\n      return msg;\r\n    }\r\n    return msg.replace(/\\{(.+)\\}/g, function(match, p1) {\r\n      return value[p1] || '';\r\n    });\r\n  }\r\n\r\n  public resetMsg(msg: Object) {\r\n    if (typeof msg !== 'object') {\r\n      throw Error('form valid msg must be a object');\r\n    }\r\n    //this.validMsg = {};\r\n\r\n    for (const name in msg) {\r\n      if (typeof msg[name] !== 'object') {\r\n        this.validMsg[name.toLowerCase()] = msg[name];\r\n      } else {\r\n        this.formatMsg(msg[name], name.toLowerCase(), this.validMsg);\r\n      }\r\n    }\r\n  }\r\n\r\n  private formatMsg(msg: Object, path: string, result: Object) {\r\n    for (const name in msg) {\r\n      if (typeof msg[name] !== 'object') {\r\n        result[path + '.' + name.toLowerCase()] = msg[name];\r\n      } else {\r\n        this.formatMsg(msg[name], path + '.' + name.toLowerCase(), result);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport scrollIntoView from 'dom-scroll-into-view';\r\n\r\nfunction computedStyle(el, prop) {\r\n  const getComputedStyle = window.getComputedStyle;\r\n  const style =\r\n    // If we have getComputedStyle\r\n    getComputedStyle\r\n      ? // Query it\r\n        // TODO: From CSS-Query notes, we might need (node, null) for FF\r\n        getComputedStyle(el)\r\n      : // Otherwise, we are in IE and use currentStyle\r\n        el.currentStyle;\r\n  if (style) {\r\n    return style[\r\n      // Switch to camelCase for CSSOM\r\n      // DEV: Grabbed from jQuery\r\n      // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\r\n      // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\r\n      prop.replace(/-(\\w)/gi, (word, letter) => {\r\n        return letter.toUpperCase();\r\n      })\r\n    ];\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction getScrollableContainer(n) {\r\n  let node = n;\r\n  let nodeName;\r\n  /* eslint no-cond-assign:0 */\r\n  while (node && (nodeName = node.nodeName.toLowerCase()) !== 'body') {\r\n    const overflowY = computedStyle(node, 'overflowY');\r\n    // https://stackoverflow.com/a/36900407/3040605\r\n    if (node !== n && (overflowY === 'auto' || overflowY === 'scroll') && node.scrollHeight > node.clientHeight) {\r\n      return node;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n  return nodeName === 'body' ? node.ownerDocument : node;\r\n}\r\n\r\n@Injectable()\r\nexport class GlobalValidService {\r\n  private validForms: Array<any> = [];\r\n  private needScroll = false;\r\n  private scrollElem: Array<Element> = [];\r\n  private doScrollObserv: Observable<any> = Observable.create((observer) => {\r\n    this.scrollObserver = observer;\r\n  });\r\n  private scrollObserver: Observer<any>;\r\n  private scrollOptions = null;\r\n\r\n  constructor() {\r\n    this.doScrollObserv.pipe(debounceTime(500)).subscribe(() => {\r\n      if (!this.needScroll || !this.scrollElem.length) {\r\n        return;\r\n      }\r\n      this.needScroll = false;\r\n      let minScrollTop = Number.MAX_VALUE;\r\n      let scrollElem: Element;\r\n      this.scrollElem.forEach((elem) => {\r\n        const top = elem.getBoundingClientRect().top;\r\n        if (minScrollTop > top) {\r\n          minScrollTop = top;\r\n          scrollElem = elem;\r\n        }\r\n      });\r\n      if (!scrollElem) {\r\n        return;\r\n      }\r\n      const c = getScrollableContainer(scrollElem);\r\n      if (!c) {\r\n        return;\r\n      }\r\n      scrollIntoView(\r\n        scrollElem,\r\n        c,\r\n        Object.assign(\r\n          {},\r\n          {\r\n            onlyScrollIfNeeded: true,\r\n            offsetTop: 200\r\n          },\r\n          this.scrollOptions || {}\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  public registerValidForm(form: AbstractControl, errorHook: Function) {\r\n    let index = this.validForms.findIndex((elem) => {\r\n      return elem.form == form;\r\n    });\r\n    if (index >= 0) {\r\n      this.validForms[index].count += 1;\r\n    } else {\r\n      index = this.validForms.length;\r\n      this.validForms.push({ form: form, count: 1, errorHooks: [] });\r\n    }\r\n    if (errorHook) {\r\n      this.validForms[index].errorHooks.push(errorHook);\r\n    }\r\n  }\r\n\r\n  public resetNull() {\r\n    this.validForms.forEach((elemForm) => {\r\n      if (elemForm.form instanceof FormControl) {\r\n        elemForm.form.reset(null, { emitEvent: false, onlySelf: true });\r\n        elemForm.form.setErrors(null, { emitEvent: true });\r\n        elemForm.form.markAsPristine();\r\n      } else {\r\n        elemForm.form.reset({}, { emitEvent: false, onlySelf: true });\r\n        elemForm.form.setErrors(null, { emitEvent: false });\r\n        this.resetGroup(elemForm.form);\r\n      }\r\n      if (elemForm['sub']) {\r\n        elemForm['sub'].unsubscribe();\r\n      }\r\n      elemForm.form['_reset'] = true;\r\n      const sub = elemForm.form.valueChanges.subscribe(() => {\r\n        elemForm.form['_reset'] = false;\r\n        elemForm['sub'].unsubscribe();\r\n        elemForm['sub'] = null;\r\n      });\r\n      elemForm['sub'] = sub;\r\n    });\r\n  }\r\n\r\n  public scrollTo(elem: Element) {\r\n    if (!this.needScroll) {\r\n      return;\r\n    }\r\n    this.scrollElem.push(elem);\r\n    this.scrollObserver.next(elem);\r\n  }\r\n\r\n  public validAll(needScroll = false, scrollOptions = null) {\r\n    this.needScroll = needScroll;\r\n    this.scrollOptions = scrollOptions;\r\n    this.scrollElem = [];\r\n    let result = true;\r\n    this.validForms.forEach((elemForm) => {\r\n      if (elemForm.form.disabled) {\r\n        return;\r\n      }\r\n      if (!elemForm.form.valid || elemForm.form['_reset']) {\r\n        elemForm.form.markAsDirty();\r\n        if (elemForm.form instanceof FormControl) {\r\n          console.log(elemForm.form.status, elemForm.form);\r\n          if (elemForm.form['_reset']) {\r\n            elemForm.form['_reset'] = false;\r\n            elemForm.form.setValue(elemForm.form.value, {\r\n              emitModelToViewChange: false,\r\n              emitViewToModelChange: false,\r\n              onlySelf: true,\r\n              emitEvent: false\r\n            });\r\n          }\r\n          elemForm.form.statusChanges.emit(elemForm.form.status);\r\n        } else {\r\n          this.validFormGroup(elemForm.form);\r\n        }\r\n        if (!elemForm.form.valid) {\r\n          elemForm.errorHooks.forEach((errorHook) => {\r\n            errorHook(elemForm.form);\r\n          });\r\n        }\r\n      }\r\n      result = elemForm.form.valid && result;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public unregisterValidForm(form, errorHook: Function) {\r\n    const index = this.validForms.findIndex((elem) => {\r\n      return elem.form == form;\r\n    });\r\n    if (index >= 0 && this.validForms[index].count > 1) {\r\n      this.validForms[index].count -= 1;\r\n      if (errorHook) {\r\n        const fIndex = this.validForms[index].errorHooks.indexOf(errorHook);\r\n        if (fIndex != -1) {\r\n          this.validForms[index].errorHooks.splice(fIndex, 1);\r\n        }\r\n      }\r\n    } else {\r\n      this.validForms.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private validFormGroup(formGroup: FormGroup) {\r\n    if (formGroup.disabled) {\r\n      return;\r\n    }\r\n    const formControls = formGroup.controls;\r\n    for (const name in formControls) {\r\n      if (!formControls.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      if (formControls[name].disabled) {\r\n        continue;\r\n      }\r\n      if (formControls[name] instanceof FormGroup) {\r\n        this.validFormGroup(<FormGroup>formControls[name]);\r\n      }\r\n      if (!formControls[name].valid || formControls[name]['_reset']) {\r\n        formControls[name].markAsDirty();\r\n        console.log(formControls[name].status, formControls[name]);\r\n        if (formControls[name]['_reset']) {\r\n          formControls[name]['_reset'] = false;\r\n          formControls[name].setValue(formControls[name].value, {\r\n            emitModelToViewChange: false,\r\n            emitViewToModelChange: false,\r\n            onlySelf: true,\r\n            emitEvent: false\r\n          });\r\n        }\r\n        (formControls[name].statusChanges as EventEmitter<string>).emit(formControls[name].status);\r\n      }\r\n      if (!formGroup.valid || formGroup['_reset']) {\r\n        formGroup.markAsDirty();\r\n        if (formGroup['_reset']) {\r\n          formGroup['_reset'] = false;\r\n          formGroup.setValue(formGroup.value, { onlySelf: true, emitEvent: false });\r\n        }\r\n        (formGroup.statusChanges as EventEmitter<string>).emit(formControls[name].status);\r\n      }\r\n    }\r\n  }\r\n\r\n  private resetGroup(formGroup: FormGroup) {\r\n    const formControls = formGroup.controls;\r\n    for (const name in formControls) {\r\n      if (!formControls.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      if (formControls[name] instanceof FormGroup) {\r\n        formControls[name].setErrors(null, { emitEvent: false });\r\n        this.resetGroup(<FormGroup>formControls[name]);\r\n      } else {\r\n        formControls[name].setErrors(null, { emitEvent: true });\r\n      }\r\n      formControls[name]['_reset'] = true;\r\n      formControls[name].markAsPristine();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ContentChild,\r\n  TemplateRef,\r\n  Input,\r\n  Inject,\r\n  AfterContentInit,\r\n  ElementRef,\r\n  Attribute,\r\n  Optional\r\n} from '@angular/core';\r\nimport {\r\n  ControlContainer,\r\n  AbstractControl,\r\n  AbstractControlDirective,\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupName,\r\n  FormGroupDirective,\r\n  NgModelGroup\r\n} from '@angular/forms';\r\n\r\nimport { FormValidMsgService } from '../services/form-valid-msg.service';\r\nimport { GlobalValidService } from '../services/global-valid.service';\r\n\r\nconst VALID_COMPONENT_NAME = 'mpr-form-control-valid';\r\n\r\n@Component({\r\n  selector: VALID_COMPONENT_NAME,\r\n  template: `<span\r\n    class=\"error\"\r\n    [ngClass]=\"errorPrompt\"\r\n    [hidden]=\"!errorMsg\"\r\n>\r\n    <ng-container\r\n        [ngTemplateOutlet]=\"template\"\r\n        [ngTemplateOutletContext]=\"{errorMsg:errorMsg}\"\r\n    ></ng-container>\r\n    <p *ngIf=\"!template\">{{errorMsg}}</p>\r\n</span>\r\n`,\r\n  styles: [`p{width:100%;height:17px;line-height:17px;color:#e06a2f;float:left}`]\r\n})\r\nexport class FormControlValidComponent implements OnInit {\r\n  //åªæ¾ç¤ºformgroupæ¬èº«çéè¯¯ï¼ä¸æ¾ç¤ºgroupä¸controlçéè¯¯\r\n  @Input() onlyGroup = false;\r\n  @Input() errorPrompt;\r\n  @Input() controlName;\r\n  @Input() errorHook: Function;\r\n\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  public errorMsg: string; //éªè¯å¤±è´¥æ¾ç¤ºçéè¯¯æ¶æ¯\r\n\r\n  private formControl: AbstractControl;\r\n  private groupValidControlLength = 1;\r\n  private delete = false;\r\n\r\n  constructor(\r\n    @Attribute('controlName') controlName: string,\r\n    @Optional() private container: ControlContainer,\r\n    private errMsgServ: FormValidMsgService,\r\n    private globalValidServ: GlobalValidService,\r\n    private elemRef: ElementRef\r\n  ) {\r\n    if (controlName) {\r\n      this.controlName = controlName.replace(/'/g, '');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n    //  å¼å®¹ngFrom\r\n    // Promise.resolve(null).then(() => {\r\n    //   this.bindControlErrorMsg();\r\n    // });\r\n    setTimeout(() => {\r\n      if (!this.delete) {\r\n        this.bindControlErrorMsg();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  bindControlErrorMsg() {\r\n    this.controlName = this.getFormControlName();\r\n    if (!this.controlName) {\r\n      throw new Error(\"can't find controlName\");\r\n    }\r\n    console.log(this.controlName);\r\n    let path = '';\r\n    const isFormControl =\r\n      this.container.control.get(this.controlName) &&\r\n      this.container.control.get(this.controlName) instanceof FormControl;\r\n    if (!isFormControl) {\r\n      // from root or from formGroupName\r\n      this.formControl = this.container.control;\r\n      path = this.getPath(this.formControl, this.formControl.root, this.controlName);\r\n      this.formControl.statusChanges.subscribe(() => {\r\n        // if (this.formControl.pristine) {\r\n        //   return;\r\n        // }\r\n        if (this.onlyGroup) {\r\n          this.errorMsg = this.errMsgServ.getValidMsg(path || this.controlName, this.formControl.errors)['errorMsg'];\r\n        } else {\r\n          this.errorMsg = this.getGroupControlValidMsg(<any>this.formControl, path || this.controlName, {\r\n            minWeight: Number.MAX_VALUE,\r\n            errorMsg: ''\r\n          })['errorMsg'];\r\n        }\r\n      });\r\n    } else {\r\n      this.formControl = this.container.control.get(this.controlName);\r\n      path = this.getPath(this.formControl, this.formControl.root, this.controlName);\r\n      this.formControl.statusChanges.subscribe(() => {\r\n        // if (this.formControl.pristine) {\r\n        //   return;\r\n        // }\r\n        this.errorMsg = this.errMsgServ.getValidMsg(path || this.controlName, this.formControl.errors)['errorMsg'];\r\n        if (this.errorMsg) {\r\n          Promise.resolve(null).then(() => {\r\n            this.globalValidServ.scrollTo(this.elemRef.nativeElement);\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (!this.formControl) {\r\n      throw new Error('formControl instance not find');\r\n    }\r\n    this.globalValidServ.registerValidForm(this.formControl['root'] || this.formControl, this.errorHook);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    if (this.formControl) {\r\n      this.globalValidServ.unregisterValidForm(this.formControl['root'] || this.formControl, this.errorHook);\r\n    }\r\n    this.delete = true;\r\n  }\r\n\r\n  private setFormControlMsgListener(control: FormGroup | FormControl, path) {\r\n    control.valueChanges.subscribe(() => {\r\n      let errorInfo = this.errMsgServ.getValidMsg(path || this.controlName, control.errors);\r\n    });\r\n    if (control instanceof FormGroup) {\r\n      for (let name in control.controls) {\r\n        this.setFormControlMsgListener(<any>control.get(name), path + '.' + name);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·ågroupä¸é¢çææéªè¯éè¯¯æ¶æ¯\r\n   * @param control\r\n   * @param path\r\n   */\r\n  private getGroupControlValidMsg(control: any, path: string, errorInfo) {\r\n    if (control instanceof FormControl && !control.pristine) {\r\n      return this.errMsgServ.getValidMsg(path, control.errors);\r\n    } else if (control instanceof FormControl && control.pristine) {\r\n      return '';\r\n    }\r\n    let tmpErrorInfo;\r\n    for (let name in control.controls) {\r\n      tmpErrorInfo = this.getGroupControlValidMsg(<any>control.get(name), path + '.' + name, errorInfo);\r\n      if (tmpErrorInfo && tmpErrorInfo['minWeight'] < errorInfo['minWeight']) {\r\n        errorInfo = tmpErrorInfo;\r\n      }\r\n    }\r\n    if (!control.pristine) {\r\n      tmpErrorInfo = this.errMsgServ.getValidMsg(path, control.errors);\r\n    }\r\n    if (tmpErrorInfo && tmpErrorInfo['minWeight'] < errorInfo['minWeight']) {\r\n      errorInfo = tmpErrorInfo;\r\n    }\r\n    return errorInfo;\r\n  }\r\n\r\n  private getParentGroupELem(): Element {\r\n    let parentElement: Element = this.elemRef.nativeElement.parentElement;\r\n    // const arrtributeNames: Array<string> = parentElement.getAttributeNames();\r\n    // console.log(parentElement.getAttribute('ng-reflect-form'));\r\n    while (\r\n      parentElement &&\r\n      !parentElement.getAttribute('formgroupname') &&\r\n      !parentElement.getAttribute('formGroupName') &&\r\n      !parentElement.getAttribute('formgroup')\r\n    ) {\r\n      if (\r\n        parentElement.nodeName.toLocaleLowerCase() === 'form' ||\r\n        parentElement.nodeName.toLocaleLowerCase() === 'ngform'\r\n      ) {\r\n        break;\r\n      }\r\n      parentElement = parentElement.parentElement;\r\n    }\r\n    if (!parentElement) {\r\n      console.log(this.elemRef.nativeElement);\r\n      throw new Error('can not find parentElement');\r\n    }\r\n    return parentElement;\r\n  }\r\n\r\n  private getSlibingFormContrlElem(searchElem: Element) {\r\n    let previousSibling: Element = searchElem.previousElementSibling;\r\n    while (\r\n      previousSibling &&\r\n      !previousSibling.hasAttribute('formcontrolname') &&\r\n      !previousSibling.hasAttribute('formControlName') &&\r\n      !previousSibling.hasAttribute('name')\r\n    ) {\r\n      // if(previousSibling.hasAttribute(\"formGroupName\") || previousSibling.hasAttribute(\"[formGroup]\")){\r\n      //   throw new Error(\"have search to root\");\r\n      // }\r\n      previousSibling = previousSibling.previousElementSibling;\r\n    }\r\n    if (!previousSibling) {\r\n      throw new Error('mpr-form-control-valid must have a formcontrol sibiling');\r\n    }\r\n    return previousSibling;\r\n  }\r\n\r\n  /**\r\n   * èªå¨æ¥æ¾å½åéªè¯å¯¹åºçformControlNameæèformGroupName\r\n   */\r\n  private getFormControlName(): string {\r\n    if (this.controlName) {\r\n      // æå¨è®¾å®äºcontrolName\r\n      return this.controlName;\r\n    }\r\n\r\n    let controlName;\r\n    if (!this.container) {\r\n      throw new Error('only one [formControl] not support, There must be a formGroupName or [formGroup]');\r\n    } else {\r\n      const parentElement: Element = this.getParentGroupELem();\r\n      const groupValidControlLength = parentElement.querySelectorAll(VALID_COMPONENT_NAME).length;\r\n      this.groupValidControlLength = groupValidControlLength;\r\n      if (this.container instanceof FormGroupDirective && groupValidControlLength <= 1) {\r\n        // ç´æ¥æ¯æ ¹èç¹å¯¹åºæ´ä¸ªfrom [formGroup]=\"formGroup\"\r\n        // æ´ä¸ªformè¡¨ååªæä¸ä¸ªmpr-form-control-validï¼åä»¥å½åformGroupå¯¹åºçåéåä¸ºcontrolName\r\n        throw new Error('you should set controlName by yourself');\r\n      } else if (this.container instanceof FormGroupName && groupValidControlLength <= 1) {\r\n        // ç¶èç¹æ¯formè¡¨åä¸­æä¸ªgroup\r\n        // æ´ä¸ªgroupåªæä¸ä¸ªmpr-form-control-valid\r\n        // ä¼ååfromGroupçéªè¯\r\n        controlName = parentElement.getAttribute('formgroupname') || parentElement.getAttribute('fromGroupName');\r\n      } else if (this.container instanceof NgModelGroup && groupValidControlLength <= 1) {\r\n        // ç¶èç¹æ¯formè¡¨åä¸­æä¸ªgroup\r\n        // æ´ä¸ªgroupåªæä¸ä¸ªmpr-form-control-valid\r\n        // ä¼ååfromGroupçéªè¯\r\n        controlName = this.container.name;\r\n      } else {\r\n        // mpr-form-control-valid å¯¹åºä¸ä¸ª formControlName\r\n        // ååæ¥æ¾åå¼èç¹\r\n        const siblingElem = this.getSlibingFormContrlElem(this.elemRef.nativeElement);\r\n        controlName =\r\n          siblingElem.getAttribute('formcontrolname') ||\r\n          siblingElem.getAttribute('formControlName') ||\r\n          siblingElem.getAttribute('name');\r\n      }\r\n    }\r\n    // if(this.controlName && this.controlName != controlName){\r\n    //   throw new Error(`you may set a error controlName, you set is: ${this.controlName}, but need is: ${controlName}`);\r\n    // }\r\n    return controlName;\r\n  }\r\n\r\n  /**\r\n   * è·åå½åformControlç¸å¯¹äºformGroupçpath\r\n   * @param formControl\r\n   * @param root\r\n   * @param controlName\r\n   */\r\n  private getPath(formControl: AbstractControl, root, controlName) {\r\n    if (!(root instanceof FormGroup)) {\r\n      if (formControl === root) {\r\n        return controlName;\r\n      }\r\n      return '';\r\n    }\r\n    const path = [];\r\n    for (const ctrlName in root['controls']) {\r\n      if (root['controls'][ctrlName] === formControl) {\r\n        return ctrlName;\r\n      }\r\n      if (root['controls'][ctrlName] instanceof FormGroup) {\r\n        const tmpPath = this.getPath(formControl, root['controls'][ctrlName], controlName);\r\n        if (tmpPath) {\r\n          path.push(ctrlName);\r\n          path.push(tmpPath);\r\n          return path.join('.');\r\n        }\r\n      }\r\n    }\r\n    return path.join('.');\r\n  }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\n\r\nimport { FormValidMsgService } from '../services/form-valid-msg.service';\r\n\r\n@Directive({\r\n  selector: '[isliFormValidMsg]',\r\n  providers: [FormValidMsgService]\r\n})\r\nexport class FormValidMsgDirective {\r\n\r\n  @Input('isliFormValidMsg') set validMsg(msg) {\r\n    if (msg) {\r\n      this.msgServ.resetMsg(msg);\r\n    }\r\n  }\r\n\r\n  constructor(private msgServ: FormValidMsgService) {\r\n  }\r\n\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, FormGroup, NG_VALIDATORS } from '@angular/forms';\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nexport interface ISBN {\r\n  isbn1: string;\r\n  isbn2: string;\r\n  isbn3: string;\r\n  isbn4: string;\r\n  isbn5: string;\r\n}\r\n\r\nconst ISBN_VALIDTOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => IsbnValidtorDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprIsbnValid]',\r\n  providers: [ISBN_VALIDTOR]\r\n})\r\nexport class IsbnValidtorDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('isbn', 'è¯·è¾å¥æ­£ç¡®çISBNå·');\r\n  }\r\n\r\n  public validate(c: AbstractControl) {\r\n    if (!(c instanceof FormGroup)) {\r\n      throw new Error('isbn must be a group control');\r\n    }\r\n    const isbn: ISBN = c.value;\r\n    // ä¸éªè¯éç©º\r\n    if (!isbn.isbn1 || !isbn.isbn2 || !isbn.isbn3 || !isbn.isbn4 || !isbn.isbn5) {\r\n      return null;\r\n    }\r\n\r\n    if (this.validISBNCode([isbn.isbn1, isbn.isbn2, isbn.isbn3, isbn.isbn4, isbn.isbn5].join(''))) {\r\n      return { isbn: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private validISBNCode(s) {\r\n    if (s === '9999999999999') {\r\n      return true;\r\n    }\r\n    if (!this.isBarCode(s)) {\r\n      return false;\r\n    }\r\n    let a = 0, b = 0, c = 0, d = 0, e;\r\n    for (let i = 1; i <= 12; i++) {\r\n      const sc = parseInt(s[i - 1], 10);\r\n      if (i <= 12 && i % 2 === 0) {\r\n        a += sc;\r\n      } else if (i <= 11 && i % 2 === 1) {\r\n        b += sc;\r\n      }\r\n    }\r\n    c = a * 3;\r\n    d = b + c;\r\n    if (d % 10 === 0) {\r\n      e = d - d;\r\n    } else {\r\n      e = d + (10 - d % 10) - d;\r\n    }\r\n    return e === parseInt(s[12], 10);\r\n  }\r\n\r\n  private isBarCode(s): boolean {\r\n    if (s.length !== 13) {\r\n      return false;\r\n    }\r\n    const reg = new RegExp(/^[0-9]{12}$/);\r\n    return reg.exec(s.substring(0, 12)) != null;\r\n  }\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, FormGroup, NG_VALIDATORS } from '@angular/forms';\r\nimport { ISBN } from './isbn-validtor.directive';\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nconst ISBN_PART_VALIDTOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => IsbnPartValidDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprIsbnPartValid]',\r\n  providers: [ISBN_PART_VALIDTOR]\r\n})\r\nexport class IsbnPartValidDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('isbnPart34', 'ç¬¬ä¸ç»åç¬¬åç»ä¸å±ä¸º8ä½æ°å­');\r\n  }\r\n\r\n  public validate(c: AbstractControl) {\r\n    if (!(c instanceof FormGroup)) {\r\n      throw new Error('isbn must be a group control');\r\n    }\r\n    const isbn: ISBN = c.value;\r\n    if (!isbn.isbn3 || !isbn.isbn4) {\r\n      return null;\r\n    }\r\n    // éªè¯ç¬¬ä¸ç»åç¬¬åç»ä¸å±ä¸º8ä½æ°å­\r\n    if (isbn.isbn3.length + isbn.isbn4.length !== 8) {\r\n      return { isbnPart34: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nconst ISBN_HEADER_VALIDTOR = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => IsbnHeaderValidDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprIsbnHeaderValid]',\r\n  providers: [ISBN_HEADER_VALIDTOR]\r\n})\r\nexport class IsbnHeaderValidDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('isbnHeader', 'ç¬¬ä¸ç»å¿é¡»ä¸º978æ979');\r\n  }\r\n\r\n  validate(c: AbstractControl) {\r\n    if (!c.value) {\r\n      return null;\r\n    }\r\n    if (['999', '978', '979', '000'].indexOf(c.value) < 0) {\r\n      return { isbnHeader: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nconst FLOAT_VALIDTOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => FloatOnlyValidtorDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprFloatOnlyValidtor]',\r\n  providers: [FLOAT_VALIDTOR]\r\n})\r\nexport class FloatOnlyValidtorDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('float', 'è¯·è¾å¥æµ®ç¹æ°');\r\n  }\r\n\r\n  public validate(c: AbstractControl) {\r\n    const floatVal = parseFloat('' + c.value);\r\n    if (isNaN(floatVal)) {\r\n      return { float: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[formGroup]'\r\n})\r\nexport class MprFormGroupDirective {\r\n  constructor(private elem: ElementRef, private render: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n    // Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n    // Add 'implements OnInit' to the class.\r\n    if (this.elem.nativeElement && this.elem.nativeElement.setAttribute) {\r\n      this.render.setAttribute(this.elem.nativeElement, 'formgroup', 'formgroup');\r\n    } else if (this.elem.nativeElement && this.elem.nativeElement.parentElement) {\r\n      this.render.setAttribute(this.elem.nativeElement.parentElement, 'formgroup', 'formgroup');\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'form,ngForm,[ngForm]'\r\n})\r\nexport class MprFormDirective {\r\n  constructor(private elem: ElementRef, private render: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n    // Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n    // Add 'implements OnInit' to the class.\r\n    if (this.elem.nativeElement && this.elem.nativeElement.setAttribute) {\r\n      this.render.setAttribute(this.elem.nativeElement, 'formgroup', 'formgroup');\r\n    } else if (this.elem.nativeElement && this.elem.nativeElement.parentElement) {\r\n      this.render.setAttribute(this.elem.nativeElement.parentElement, 'formgroup', 'formgroup');\r\n    }\r\n  }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { FormControlValidComponent } from './form-control-valid/form-control-valid.component';\r\nimport { FormValidMsgDirective } from './directives/form-valid-msg.directive';\r\nimport { GlobalValidService } from './services/global-valid.service';\r\nimport { FormValidMsgService } from './services/form-valid-msg.service';\r\nimport { IsbnValidtorDirective } from './validtors/isbn-validtor.directive';\r\nimport { IsbnPartValidDirective } from './validtors/isbn-part-valid.directive';\r\nimport { IsbnHeaderValidDirective } from './validtors/isbn-header-valid.directive';\r\nimport { FloatOnlyValidtorDirective } from './validtors/float-only-validtor.directive';\r\nimport { MprFormGroupDirective } from './directives/form-group.directive';\r\nimport { MprFormDirective } from './directives/form.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    FormControlValidComponent,\r\n    FormValidMsgDirective,\r\n    IsbnValidtorDirective,\r\n    IsbnPartValidDirective,\r\n    IsbnHeaderValidDirective,\r\n    FloatOnlyValidtorDirective,\r\n    MprFormGroupDirective,\r\n    MprFormDirective\r\n  ],\r\n  exports: [\r\n    FormControlValidComponent,\r\n    FormValidMsgDirective,\r\n    IsbnValidtorDirective,\r\n    IsbnPartValidDirective,\r\n    IsbnHeaderValidDirective,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FloatOnlyValidtorDirective,\r\n    MprFormGroupDirective,\r\n    MprFormDirective\r\n  ],\r\n  providers: [\r\n    GlobalValidService,\r\n    FormValidMsgService\r\n  ]\r\n})\r\nexport class FormValidModule { }\r\n","export { FormValidModule } from './lib/form-valid.module';\r\nexport { GlobalValidService } from './lib/services/global-valid.service';\r\nexport { globalValidMsgServ } from './lib/services/global-valid-msg.service';\r\nexport { FormValidMsgService } from './lib/services/form-valid-msg.service';\r\nexport { FormControlValidComponent } from './lib/form-control-valid/form-control-valid.component';\r\nexport { FloatOnlyValidtorDirective } from './lib/validtors/float-only-validtor.directive';\r\nexport { IsbnHeaderValidDirective } from './lib/validtors/isbn-header-valid.directive';\r\nexport { IsbnPartValidDirective } from './lib/validtors/isbn-part-valid.directive';\r\nexport { IsbnValidtorDirective, ISBN } from './lib/validtors/isbn-validtor.directive';\r\n//export { FormValidMsgDirective } from './lib/directives/form-valid-msg.directive';\r\n"],"names":["Injectable","Observable","debounceTime","FormControl","FormGroup","FormGroupDirective","FormGroupName","NgModelGroup","Component","Attribute","ControlContainer","Optional","ElementRef","Input","ContentChild","TemplateRef","Directive","NG_VALIDATORS","forwardRef","Renderer2","NgModule","CommonModule","ReactiveFormsModule","FormsModule"],"mappings":"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"}
