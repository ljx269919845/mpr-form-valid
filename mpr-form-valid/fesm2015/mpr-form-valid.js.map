{"version":3,"file":"mpr-form-valid.js.map","sources":["ng://mpr-form-valid/lib/services/global-valid-msg.service.ts","ng://mpr-form-valid/lib/services/form-valid-msg.service.ts","ng://mpr-form-valid/lib/services/global-valid.service.ts","ng://mpr-form-valid/lib/form-control-valid/form-control-valid.component.ts","ng://mpr-form-valid/lib/directives/form-valid-msg.directive.ts","ng://mpr-form-valid/lib/validtors/isbn-validtor.directive.ts","ng://mpr-form-valid/lib/validtors/isbn-part-valid.directive.ts","ng://mpr-form-valid/lib/validtors/isbn-header-valid.directive.ts","ng://mpr-form-valid/lib/validtors/float-only-validtor.directive.ts","ng://mpr-form-valid/lib/directives/form-group.directive.ts","ng://mpr-form-valid/lib/directives/form.directive.ts","ng://mpr-form-valid/lib/form-valid.module.ts","ng://mpr-form-valid/public_api.ts"],"sourcesContent":["/**\r\n * å¨å±éªè¯æ¶æ¯ï¼ å­å¨é»è®¤æ¶æ¯\r\n */\r\nexport class GlobalValidMsgService {\r\n\tprivate validMsg = new Map<String, String>();\r\n\tconstructor() {}\r\n\r\n\t/**\r\n   * è®¾ç½®éè¯¯keyçé»è®¤æ¶æ¯\r\n   * @param msgKey éè¯¯key\r\n   * @param msgValue éè¯¯æ¶æ¯\r\n   */\r\n\tpublic registerMsg(msgKey: string, msgValue: string) {\r\n\t\tif (!msgKey || !msgValue) {\r\n\t\t\tthrow new Error('msg key and value must not empty');\r\n\t\t}\r\n\t\tthis.validMsg.set(msgKey.toLowerCase(), msgValue);\r\n\t}\r\n\r\n\tpublic getMsg(msgKey: string) {\r\n\t\tif (!msgKey) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.validMsg.get(msgKey.toLowerCase());\r\n\t}\r\n}\r\n\r\nexport const globalValidMsgServ = new GlobalValidMsgService();\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { globalValidMsgServ } from './global-valid-msg.service';\r\n\r\n@Injectable()\r\nexport class FormValidMsgService {\r\n  private validMsg = {};\r\n  constructor() {}\r\n\r\n  public setValidMsg(msgKey: string, msgValue: string) {\r\n    if (!msgValue) {\r\n      return;\r\n    }\r\n    this.validMsg[msgKey.toLowerCase()] = msgValue;\r\n  }\r\n\r\n  public getValidMsg(msgPath: string, error) {\r\n    let minWeight = Number.MAX_VALUE;\r\n    let errorMsg = '';\r\n    let tmpMsg;\r\n    let tmpWeight;\r\n    msgPath = (msgPath || '').toLowerCase();\r\n    if (!error || !msgPath) {\r\n      return { errorMsg, minWeight };\r\n    }\r\n\r\n    for (let name in error) {\r\n      if (!error.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      const orgName = name;\r\n      name = name.toLowerCase();\r\n      tmpMsg = this.formartMsg(this.validMsg[msgPath + '.' + name] || globalValidMsgServ.getMsg(name), error[orgName]);\r\n      if (!tmpMsg) {\r\n        continue;\r\n      }\r\n      if (Number.isNaN(Number(error[name]))) {\r\n        tmpWeight = 1000;\r\n      } else {\r\n        tmpWeight = Number(error[name]);\r\n      }\r\n      if (tmpWeight < minWeight) {\r\n        minWeight = tmpWeight;\r\n        errorMsg = tmpMsg;\r\n      }\r\n    }\r\n    return { errorMsg, minWeight };\r\n  }\r\n\r\n  public formartMsg(msg: string, value: any) {\r\n    if (typeof value !== 'object' || !value) {\r\n      return msg;\r\n    }\r\n    return msg.replace(/\\{(.+)\\}/g, function(match, p1) {\r\n      return value[p1] || '';\r\n    });\r\n  }\r\n\r\n  public resetMsg(msg: Object) {\r\n    if (typeof msg !== 'object') {\r\n      throw Error('form valid msg must be a object');\r\n    }\r\n    //this.validMsg = {};\r\n\r\n    for (const name in msg) {\r\n      if (typeof msg[name] !== 'object') {\r\n        this.validMsg[name.toLowerCase()] = msg[name];\r\n      } else {\r\n        this.formatMsg(msg[name], name.toLowerCase(), this.validMsg);\r\n      }\r\n    }\r\n  }\r\n\r\n  private formatMsg(msg: Object, path: string, result: Object) {\r\n    for (const name in msg) {\r\n      if (typeof msg[name] !== 'object') {\r\n        result[path + '.' + name.toLowerCase()] = msg[name];\r\n      } else {\r\n        this.formatMsg(msg[name], path + '.' + name.toLowerCase(), result);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl, AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport scrollIntoView from 'dom-scroll-into-view';\r\n\r\nfunction computedStyle(el, prop) {\r\n  const getComputedStyle = window.getComputedStyle;\r\n  const style =\r\n    // If we have getComputedStyle\r\n    getComputedStyle\r\n      ? // Query it\r\n        // TODO: From CSS-Query notes, we might need (node, null) for FF\r\n        getComputedStyle(el)\r\n      : // Otherwise, we are in IE and use currentStyle\r\n        el.currentStyle;\r\n  if (style) {\r\n    return style[\r\n      // Switch to camelCase for CSSOM\r\n      // DEV: Grabbed from jQuery\r\n      // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\r\n      // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\r\n      prop.replace(/-(\\w)/gi, (word, letter) => {\r\n        return letter.toUpperCase();\r\n      })\r\n    ];\r\n  }\r\n  return undefined;\r\n}\r\n\r\nfunction getScrollableContainer(n) {\r\n  let node = n;\r\n  let nodeName;\r\n  /* eslint no-cond-assign:0 */\r\n  while (node && (nodeName = node.nodeName.toLowerCase()) !== 'body') {\r\n    const overflowY = computedStyle(node, 'overflowY');\r\n    // https://stackoverflow.com/a/36900407/3040605\r\n    if (node !== n && (overflowY === 'auto' || overflowY === 'scroll') && node.scrollHeight > node.clientHeight) {\r\n      return node;\r\n    }\r\n    node = node.parentNode;\r\n  }\r\n  return nodeName === 'body' ? node.ownerDocument : node;\r\n}\r\n\r\n@Injectable()\r\nexport class GlobalValidService {\r\n  private validForms: Array<any> = [];\r\n  private needScroll = false;\r\n  private scrollElem: Array<Element> = [];\r\n  private doScrollObserv: Observable<any> = Observable.create((observer) => {\r\n    this.scrollObserver = observer;\r\n  });\r\n  private scrollObserver: Observer<any>;\r\n  private scrollOptions = null;\r\n\r\n  constructor() {\r\n    this.doScrollObserv.pipe(debounceTime(500)).subscribe(() => {\r\n      if (!this.needScroll || !this.scrollElem.length) {\r\n        return;\r\n      }\r\n      this.needScroll = false;\r\n      let minScrollTop = Number.MAX_VALUE;\r\n      let scrollElem: Element;\r\n      this.scrollElem.forEach((elem) => {\r\n        const top = elem.getBoundingClientRect().top;\r\n        if (minScrollTop > top) {\r\n          minScrollTop = top;\r\n          scrollElem = elem;\r\n        }\r\n      });\r\n      if (!scrollElem) {\r\n        return;\r\n      }\r\n      const c = getScrollableContainer(scrollElem);\r\n      if (!c) {\r\n        return;\r\n      }\r\n      scrollIntoView(\r\n        scrollElem,\r\n        c,\r\n        Object.assign(\r\n          {},\r\n          {\r\n            onlyScrollIfNeeded: true,\r\n            offsetTop: 200\r\n          },\r\n          this.scrollOptions || {}\r\n        )\r\n      );\r\n    });\r\n  }\r\n\r\n  public registerValidForm(form: AbstractControl, errorHook: Function) {\r\n    let index = this.validForms.findIndex((elem) => {\r\n      return elem.form == form;\r\n    });\r\n    if (index >= 0) {\r\n      this.validForms[index].count += 1;\r\n    } else {\r\n      index = this.validForms.length;\r\n      this.validForms.push({ form: form, count: 1, errorHooks: [] });\r\n    }\r\n    if (errorHook) {\r\n      this.validForms[index].errorHooks.push(errorHook);\r\n    }\r\n  }\r\n\r\n  public resetNull() {\r\n    this.validForms.forEach((elemForm) => {\r\n      if (elemForm.form instanceof FormControl) {\r\n        elemForm.form.reset(null, { emitEvent: false, onlySelf: true });\r\n        elemForm.form.setErrors(null, { emitEvent: true });\r\n        elemForm.form.markAsPristine();\r\n      } else {\r\n        elemForm.form.reset({}, { emitEvent: false, onlySelf: true });\r\n        elemForm.form.setErrors(null, { emitEvent: false });\r\n        this.resetGroup(elemForm.form);\r\n      }\r\n      if (elemForm['sub']) {\r\n        elemForm['sub'].unsubscribe();\r\n      }\r\n      elemForm.form['_reset'] = true;\r\n      const sub = elemForm.form.valueChanges.subscribe(() => {\r\n        elemForm.form['_reset'] = false;\r\n        elemForm['sub'].unsubscribe();\r\n        elemForm['sub'] = null;\r\n      });\r\n      elemForm['sub'] = sub;\r\n    });\r\n  }\r\n\r\n  public scrollTo(elem: Element) {\r\n    if (!this.needScroll) {\r\n      return;\r\n    }\r\n    this.scrollElem.push(elem);\r\n    this.scrollObserver.next(elem);\r\n  }\r\n\r\n  public validAll(needScroll = false, scrollOptions = null) {\r\n    this.needScroll = needScroll;\r\n    this.scrollOptions = scrollOptions;\r\n    this.scrollElem = [];\r\n    let result = true;\r\n    this.validForms.forEach((elemForm) => {\r\n      if (elemForm.form.disabled) {\r\n        return;\r\n      }\r\n      if (!elemForm.form.valid || elemForm.form['_reset']) {\r\n        elemForm.form.markAsDirty();\r\n        if (elemForm.form instanceof FormControl) {\r\n          console.log(elemForm.form.status, elemForm.form);\r\n          if (elemForm.form['_reset']) {\r\n            elemForm.form['_reset'] = false;\r\n            elemForm.form.setValue(elemForm.form.value, {\r\n              emitModelToViewChange: false,\r\n              emitViewToModelChange: false,\r\n              onlySelf: true,\r\n              emitEvent: false\r\n            });\r\n          }\r\n          elemForm.form.statusChanges.emit(elemForm.form.status);\r\n        } else {\r\n          this.validFormGroup(elemForm.form);\r\n        }\r\n        if (!elemForm.form.valid) {\r\n          elemForm.errorHooks.forEach((errorHook) => {\r\n            errorHook(elemForm.form);\r\n          });\r\n        }\r\n      }\r\n      result = elemForm.form.valid && result;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public unregisterValidForm(form, errorHook: Function) {\r\n    const index = this.validForms.findIndex((elem) => {\r\n      return elem.form == form;\r\n    });\r\n    if (index >= 0 && this.validForms[index].count > 1) {\r\n      this.validForms[index].count -= 1;\r\n      if (errorHook) {\r\n        const fIndex = this.validForms[index].errorHooks.indexOf(errorHook);\r\n        if (fIndex != -1) {\r\n          this.validForms[index].errorHooks.splice(fIndex, 1);\r\n        }\r\n      }\r\n    } else {\r\n      this.validForms.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  private validFormGroup(formGroup: FormGroup) {\r\n    if (formGroup.disabled) {\r\n      return;\r\n    }\r\n    const formControls = formGroup.controls;\r\n    for (const name in formControls) {\r\n      if (!formControls.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      if (formControls[name].disabled) {\r\n        continue;\r\n      }\r\n      if (formControls[name] instanceof FormGroup) {\r\n        this.validFormGroup(<FormGroup>formControls[name]);\r\n      }\r\n      if (!formControls[name].valid || formControls[name]['_reset']) {\r\n        formControls[name].markAsDirty();\r\n        console.log(formControls[name].status, formControls[name]);\r\n        if (formControls[name]['_reset']) {\r\n          formControls[name]['_reset'] = false;\r\n          formControls[name].setValue(formControls[name].value, {\r\n            emitModelToViewChange: false,\r\n            emitViewToModelChange: false,\r\n            onlySelf: true,\r\n            emitEvent: false\r\n          });\r\n        }\r\n        (formControls[name].statusChanges as EventEmitter<string>).emit(formControls[name].status);\r\n      }\r\n      if (!formGroup.valid || formGroup['_reset']) {\r\n        formGroup.markAsDirty();\r\n        if (formGroup['_reset']) {\r\n          formGroup['_reset'] = false;\r\n          formGroup.setValue(formGroup.value, { onlySelf: true, emitEvent: false });\r\n        }\r\n        (formGroup.statusChanges as EventEmitter<string>).emit(formControls[name].status);\r\n      }\r\n    }\r\n  }\r\n\r\n  private resetGroup(formGroup: FormGroup) {\r\n    const formControls = formGroup.controls;\r\n    for (const name in formControls) {\r\n      if (!formControls.hasOwnProperty(name)) {\r\n        continue;\r\n      }\r\n      if (formControls[name] instanceof FormGroup) {\r\n        formControls[name].setErrors(null, { emitEvent: false });\r\n        this.resetGroup(<FormGroup>formControls[name]);\r\n      } else {\r\n        formControls[name].setErrors(null, { emitEvent: true });\r\n      }\r\n      formControls[name]['_reset'] = true;\r\n      formControls[name].markAsPristine();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ContentChild,\r\n  TemplateRef,\r\n  Input,\r\n  Inject,\r\n  AfterContentInit,\r\n  ElementRef,\r\n  Attribute,\r\n  Optional\r\n} from '@angular/core';\r\nimport {\r\n  ControlContainer,\r\n  AbstractControl,\r\n  AbstractControlDirective,\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupName,\r\n  FormGroupDirective,\r\n  NgModelGroup\r\n} from '@angular/forms';\r\n\r\nimport { FormValidMsgService } from '../services/form-valid-msg.service';\r\nimport { GlobalValidService } from '../services/global-valid.service';\r\n\r\nconst VALID_COMPONENT_NAME = 'mpr-form-control-valid';\r\n\r\n@Component({\r\n  selector: VALID_COMPONENT_NAME,\r\n  template: `<span\r\n    class=\"error\"\r\n    [ngClass]=\"errorPrompt\"\r\n    [hidden]=\"!errorMsg\"\r\n>\r\n    <ng-container\r\n        [ngTemplateOutlet]=\"template\"\r\n        [ngTemplateOutletContext]=\"{errorMsg:errorMsg}\"\r\n    ></ng-container>\r\n    <p *ngIf=\"!template\">{{errorMsg}}</p>\r\n</span>\r\n`,\r\n  styles: [`p{width:100%;height:17px;line-height:17px;color:#e06a2f;float:left}`]\r\n})\r\nexport class FormControlValidComponent implements OnInit {\r\n  //åªæ¾ç¤ºformgroupæ¬èº«çéè¯¯ï¼ä¸æ¾ç¤ºgroupä¸controlçéè¯¯\r\n  @Input() onlyGroup = false;\r\n  @Input() errorPrompt;\r\n  @Input() controlName;\r\n  @Input() errorHook: Function;\r\n\r\n  @ContentChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  public errorMsg: string; //éªè¯å¤±è´¥æ¾ç¤ºçéè¯¯æ¶æ¯\r\n\r\n  private formControl: AbstractControl;\r\n  private groupValidControlLength = 1;\r\n  private delete = false;\r\n\r\n  constructor(\r\n    @Attribute('controlName') controlName: string,\r\n    @Optional() private container: ControlContainer,\r\n    private errMsgServ: FormValidMsgService,\r\n    private globalValidServ: GlobalValidService,\r\n    private elemRef: ElementRef\r\n  ) {\r\n    if (controlName) {\r\n      this.controlName = controlName.replace(/'/g, '');\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit() {\r\n    //  å¼å®¹ngFrom\r\n    // Promise.resolve(null).then(() => {\r\n    //   this.bindControlErrorMsg();\r\n    // });\r\n    setTimeout(() => {\r\n      if (!this.delete) {\r\n        this.bindControlErrorMsg();\r\n      }\r\n    }, 500);\r\n  }\r\n\r\n  bindControlErrorMsg() {\r\n    this.controlName = this.getFormControlName();\r\n    if (!this.controlName) {\r\n      throw new Error(\"can't find controlName\");\r\n    }\r\n    console.log(this.controlName);\r\n    let path = '';\r\n    const isFormControl =\r\n      this.container.control.get(this.controlName) &&\r\n      this.container.control.get(this.controlName) instanceof FormControl;\r\n    if (!isFormControl) {\r\n      // from root or from formGroupName\r\n      this.formControl = this.container.control;\r\n      path = this.getPath(this.formControl, this.formControl.root, this.controlName);\r\n      this.formControl.statusChanges.subscribe(() => {\r\n        // if (this.formControl.pristine) {\r\n        //   return;\r\n        // }\r\n        if (this.onlyGroup) {\r\n          this.errorMsg = this.errMsgServ.getValidMsg(path || this.controlName, this.formControl.errors)['errorMsg'];\r\n        } else {\r\n          this.errorMsg = this.getGroupControlValidMsg(<any>this.formControl, path || this.controlName, {\r\n            minWeight: Number.MAX_VALUE,\r\n            errorMsg: ''\r\n          })['errorMsg'];\r\n        }\r\n      });\r\n    } else {\r\n      this.formControl = this.container.control.get(this.controlName);\r\n      path = this.getPath(this.formControl, this.formControl.root, this.controlName);\r\n      this.formControl.statusChanges.subscribe(() => {\r\n        // if (this.formControl.pristine) {\r\n        //   return;\r\n        // }\r\n        this.errorMsg = this.errMsgServ.getValidMsg(path || this.controlName, this.formControl.errors)['errorMsg'];\r\n        if (this.errorMsg) {\r\n          Promise.resolve(null).then(() => {\r\n            this.globalValidServ.scrollTo(this.elemRef.nativeElement);\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (!this.formControl) {\r\n      throw new Error('formControl instance not find');\r\n    }\r\n    this.globalValidServ.registerValidForm(this.formControl['root'] || this.formControl, this.errorHook);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Called once, before the instance is destroyed.\r\n    //Add 'implements OnDestroy' to the class.\r\n    if (this.formControl) {\r\n      this.globalValidServ.unregisterValidForm(this.formControl['root'] || this.formControl, this.errorHook);\r\n    }\r\n    this.delete = true;\r\n  }\r\n\r\n  private setFormControlMsgListener(control: FormGroup | FormControl, path) {\r\n    control.valueChanges.subscribe(() => {\r\n      let errorInfo = this.errMsgServ.getValidMsg(path || this.controlName, control.errors);\r\n    });\r\n    if (control instanceof FormGroup) {\r\n      for (let name in control.controls) {\r\n        this.setFormControlMsgListener(<any>control.get(name), path + '.' + name);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * è·ågroupä¸é¢çææéªè¯éè¯¯æ¶æ¯\r\n   * @param control\r\n   * @param path\r\n   */\r\n  private getGroupControlValidMsg(control: any, path: string, errorInfo) {\r\n    if (control instanceof FormControl && !control.pristine) {\r\n      return this.errMsgServ.getValidMsg(path, control.errors);\r\n    } else if (control instanceof FormControl && control.pristine) {\r\n      return '';\r\n    }\r\n    let tmpErrorInfo;\r\n    for (let name in control.controls) {\r\n      tmpErrorInfo = this.getGroupControlValidMsg(<any>control.get(name), path + '.' + name, errorInfo);\r\n      if (tmpErrorInfo && tmpErrorInfo['minWeight'] < errorInfo['minWeight']) {\r\n        errorInfo = tmpErrorInfo;\r\n      }\r\n    }\r\n    if (!control.pristine) {\r\n      tmpErrorInfo = this.errMsgServ.getValidMsg(path, control.errors);\r\n    }\r\n    if (tmpErrorInfo && tmpErrorInfo['minWeight'] < errorInfo['minWeight']) {\r\n      errorInfo = tmpErrorInfo;\r\n    }\r\n    return errorInfo;\r\n  }\r\n\r\n  private getParentGroupELem(): Element {\r\n    let parentElement: Element = this.elemRef.nativeElement.parentElement;\r\n    // const arrtributeNames: Array<string> = parentElement.getAttributeNames();\r\n    // console.log(parentElement.getAttribute('ng-reflect-form'));\r\n    while (\r\n      parentElement &&\r\n      !parentElement.getAttribute('formgroupname') &&\r\n      !parentElement.getAttribute('formGroupName') &&\r\n      !parentElement.getAttribute('formgroup')\r\n    ) {\r\n      if (\r\n        parentElement.nodeName.toLocaleLowerCase() === 'form' ||\r\n        parentElement.nodeName.toLocaleLowerCase() === 'ngform'\r\n      ) {\r\n        break;\r\n      }\r\n      parentElement = parentElement.parentElement;\r\n    }\r\n    if (!parentElement) {\r\n      console.log(this.elemRef.nativeElement);\r\n      throw new Error('can not find parentElement');\r\n    }\r\n    return parentElement;\r\n  }\r\n\r\n  private getSlibingFormContrlElem(searchElem: Element) {\r\n    let previousSibling: Element = searchElem.previousElementSibling;\r\n    while (\r\n      previousSibling &&\r\n      !previousSibling.hasAttribute('formcontrolname') &&\r\n      !previousSibling.hasAttribute('formControlName') &&\r\n      !previousSibling.hasAttribute('name')\r\n    ) {\r\n      // if(previousSibling.hasAttribute(\"formGroupName\") || previousSibling.hasAttribute(\"[formGroup]\")){\r\n      //   throw new Error(\"have search to root\");\r\n      // }\r\n      previousSibling = previousSibling.previousElementSibling;\r\n    }\r\n    if (!previousSibling) {\r\n      throw new Error('mpr-form-control-valid must have a formcontrol sibiling');\r\n    }\r\n    return previousSibling;\r\n  }\r\n\r\n  /**\r\n   * èªå¨æ¥æ¾å½åéªè¯å¯¹åºçformControlNameæèformGroupName\r\n   */\r\n  private getFormControlName(): string {\r\n    if (this.controlName) {\r\n      // æå¨è®¾å®äºcontrolName\r\n      return this.controlName;\r\n    }\r\n\r\n    let controlName;\r\n    if (!this.container) {\r\n      throw new Error('only one [formControl] not support, There must be a formGroupName or [formGroup]');\r\n    } else {\r\n      const parentElement: Element = this.getParentGroupELem();\r\n      const groupValidControlLength = parentElement.querySelectorAll(VALID_COMPONENT_NAME).length;\r\n      this.groupValidControlLength = groupValidControlLength;\r\n      if (this.container instanceof FormGroupDirective && groupValidControlLength <= 1) {\r\n        // ç´æ¥æ¯æ ¹èç¹å¯¹åºæ´ä¸ªfrom [formGroup]=\"formGroup\"\r\n        // æ´ä¸ªformè¡¨ååªæä¸ä¸ªmpr-form-control-validï¼åä»¥å½åformGroupå¯¹åºçåéåä¸ºcontrolName\r\n        throw new Error('you should set controlName by yourself');\r\n      } else if (this.container instanceof FormGroupName && groupValidControlLength <= 1) {\r\n        // ç¶èç¹æ¯formè¡¨åä¸­æä¸ªgroup\r\n        // æ´ä¸ªgroupåªæä¸ä¸ªmpr-form-control-valid\r\n        // ä¼ååfromGroupçéªè¯\r\n        controlName = parentElement.getAttribute('formgroupname') || parentElement.getAttribute('fromGroupName');\r\n      } else if (this.container instanceof NgModelGroup && groupValidControlLength <= 1) {\r\n        // ç¶èç¹æ¯formè¡¨åä¸­æä¸ªgroup\r\n        // æ´ä¸ªgroupåªæä¸ä¸ªmpr-form-control-valid\r\n        // ä¼ååfromGroupçéªè¯\r\n        controlName = this.container.name;\r\n      } else {\r\n        // mpr-form-control-valid å¯¹åºä¸ä¸ª formControlName\r\n        // ååæ¥æ¾åå¼èç¹\r\n        const siblingElem = this.getSlibingFormContrlElem(this.elemRef.nativeElement);\r\n        controlName =\r\n          siblingElem.getAttribute('formcontrolname') ||\r\n          siblingElem.getAttribute('formControlName') ||\r\n          siblingElem.getAttribute('name');\r\n      }\r\n    }\r\n    // if(this.controlName && this.controlName != controlName){\r\n    //   throw new Error(`you may set a error controlName, you set is: ${this.controlName}, but need is: ${controlName}`);\r\n    // }\r\n    return controlName;\r\n  }\r\n\r\n  /**\r\n   * è·åå½åformControlç¸å¯¹äºformGroupçpath\r\n   * @param formControl\r\n   * @param root\r\n   * @param controlName\r\n   */\r\n  private getPath(formControl: AbstractControl, root, controlName) {\r\n    if (!(root instanceof FormGroup)) {\r\n      if (formControl === root) {\r\n        return controlName;\r\n      }\r\n      return '';\r\n    }\r\n    const path = [];\r\n    for (const ctrlName in root['controls']) {\r\n      if (root['controls'][ctrlName] === formControl) {\r\n        return ctrlName;\r\n      }\r\n      if (root['controls'][ctrlName] instanceof FormGroup) {\r\n        const tmpPath = this.getPath(formControl, root['controls'][ctrlName], controlName);\r\n        if (tmpPath) {\r\n          path.push(ctrlName);\r\n          path.push(tmpPath);\r\n          return path.join('.');\r\n        }\r\n      }\r\n    }\r\n    return path.join('.');\r\n  }\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\n\r\nimport { FormValidMsgService } from '../services/form-valid-msg.service';\r\n\r\n@Directive({\r\n  selector: '[isliFormValidMsg]',\r\n  providers: [FormValidMsgService]\r\n})\r\nexport class FormValidMsgDirective {\r\n\r\n  @Input('isliFormValidMsg') set validMsg(msg) {\r\n    if (msg) {\r\n      this.msgServ.resetMsg(msg);\r\n    }\r\n  }\r\n\r\n  constructor(private msgServ: FormValidMsgService) {\r\n  }\r\n\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, FormGroup, NG_VALIDATORS } from '@angular/forms';\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nexport interface ISBN {\r\n  isbn1: string;\r\n  isbn2: string;\r\n  isbn3: string;\r\n  isbn4: string;\r\n  isbn5: string;\r\n}\r\n\r\nconst ISBN_VALIDTOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => IsbnValidtorDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprIsbnValid]',\r\n  providers: [ISBN_VALIDTOR]\r\n})\r\nexport class IsbnValidtorDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('isbn', 'è¯·è¾å¥æ­£ç¡®çISBNå·');\r\n  }\r\n\r\n  public validate(c: AbstractControl) {\r\n    if (!(c instanceof FormGroup)) {\r\n      throw new Error('isbn must be a group control');\r\n    }\r\n    const isbn: ISBN = c.value;\r\n    // ä¸éªè¯éç©º\r\n    if (!isbn.isbn1 || !isbn.isbn2 || !isbn.isbn3 || !isbn.isbn4 || !isbn.isbn5) {\r\n      return null;\r\n    }\r\n\r\n    if (this.validISBNCode([isbn.isbn1, isbn.isbn2, isbn.isbn3, isbn.isbn4, isbn.isbn5].join(''))) {\r\n      return { isbn: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private validISBNCode(s) {\r\n    if (s === '9999999999999') {\r\n      return true;\r\n    }\r\n    if (!this.isBarCode(s)) {\r\n      return false;\r\n    }\r\n    let a = 0, b = 0, c = 0, d = 0, e;\r\n    for (let i = 1; i <= 12; i++) {\r\n      const sc = parseInt(s[i - 1], 10);\r\n      if (i <= 12 && i % 2 === 0) {\r\n        a += sc;\r\n      } else if (i <= 11 && i % 2 === 1) {\r\n        b += sc;\r\n      }\r\n    }\r\n    c = a * 3;\r\n    d = b + c;\r\n    if (d % 10 === 0) {\r\n      e = d - d;\r\n    } else {\r\n      e = d + (10 - d % 10) - d;\r\n    }\r\n    return e === parseInt(s[12], 10);\r\n  }\r\n\r\n  private isBarCode(s): boolean {\r\n    if (s.length !== 13) {\r\n      return false;\r\n    }\r\n    const reg = new RegExp(/^[0-9]{12}$/);\r\n    return reg.exec(s.substring(0, 12)) != null;\r\n  }\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, FormGroup, NG_VALIDATORS } from '@angular/forms';\r\nimport { ISBN } from './isbn-validtor.directive';\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nconst ISBN_PART_VALIDTOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => IsbnPartValidDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprIsbnPartValid]',\r\n  providers: [ISBN_PART_VALIDTOR]\r\n})\r\nexport class IsbnPartValidDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('isbnPart34', 'ç¬¬ä¸ç»åç¬¬åç»ä¸å±ä¸º8ä½æ°å­');\r\n  }\r\n\r\n  public validate(c: AbstractControl) {\r\n    if (!(c instanceof FormGroup)) {\r\n      throw new Error('isbn must be a group control');\r\n    }\r\n    const isbn: ISBN = c.value;\r\n    if (!isbn.isbn3 || !isbn.isbn4) {\r\n      return null;\r\n    }\r\n    // éªè¯ç¬¬ä¸ç»åç¬¬åç»ä¸å±ä¸º8ä½æ°å­\r\n    if (isbn.isbn3.length + isbn.isbn4.length !== 8) {\r\n      return { isbnPart34: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nconst ISBN_HEADER_VALIDTOR = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => IsbnHeaderValidDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprIsbnHeaderValid]',\r\n  providers: [ISBN_HEADER_VALIDTOR]\r\n})\r\nexport class IsbnHeaderValidDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('isbnHeader', 'ç¬¬ä¸ç»å¿é¡»ä¸º978æ979');\r\n  }\r\n\r\n  validate(c: AbstractControl) {\r\n    if (!c.value) {\r\n      return null;\r\n    }\r\n    if (['999', '978', '979', '000'].indexOf(c.value) < 0) {\r\n      return { isbnHeader: true};\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { Directive, forwardRef } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\n\r\nimport { globalValidMsgServ } from '../services/global-valid-msg.service';\r\n\r\nconst FLOAT_VALIDTOR = {\r\n  provide: NG_VALIDATORS,\r\n  useExisting: forwardRef(() => FloatOnlyValidtorDirective),\r\n  multi: true\r\n};\r\n\r\n@Directive({\r\n  selector: '[mprFloatOnlyValidtor]',\r\n  providers: [FLOAT_VALIDTOR]\r\n})\r\nexport class FloatOnlyValidtorDirective implements Validator {\r\n\r\n  constructor() {\r\n    globalValidMsgServ.registerMsg('float', 'è¯·è¾å¥æµ®ç¹æ°');\r\n  }\r\n\r\n  public validate(c: AbstractControl) {\r\n    const floatVal = parseFloat('' + c.value);\r\n    if (isNaN(floatVal)) {\r\n      return { float: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[formGroup]'\r\n})\r\nexport class MprFormGroupDirective {\r\n  constructor(private elem: ElementRef, private render: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n    // Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n    // Add 'implements OnInit' to the class.\r\n    if (this.elem.nativeElement && this.elem.nativeElement.setAttribute) {\r\n      this.render.setAttribute(this.elem.nativeElement, 'formgroup', 'formgroup');\r\n    } else if (this.elem.nativeElement && this.elem.nativeElement.parentElement) {\r\n      this.render.setAttribute(this.elem.nativeElement.parentElement, 'formgroup', 'formgroup');\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2 } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'form,ngForm,[ngForm]'\r\n})\r\nexport class MprFormDirective {\r\n  constructor(private elem: ElementRef, private render: Renderer2) { }\r\n\r\n  ngOnInit(): void {\r\n    // Called after the constructor, initializing input properties, and the first call to ngOnChanges.\r\n    // Add 'implements OnInit' to the class.\r\n    if (this.elem.nativeElement && this.elem.nativeElement.setAttribute) {\r\n      this.render.setAttribute(this.elem.nativeElement, 'formgroup', 'formgroup');\r\n    } else if (this.elem.nativeElement && this.elem.nativeElement.parentElement) {\r\n      this.render.setAttribute(this.elem.nativeElement.parentElement, 'formgroup', 'formgroup');\r\n    }\r\n  }\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { FormControlValidComponent } from './form-control-valid/form-control-valid.component';\r\nimport { FormValidMsgDirective } from './directives/form-valid-msg.directive';\r\nimport { GlobalValidService } from './services/global-valid.service';\r\nimport { FormValidMsgService } from './services/form-valid-msg.service';\r\nimport { IsbnValidtorDirective } from './validtors/isbn-validtor.directive';\r\nimport { IsbnPartValidDirective } from './validtors/isbn-part-valid.directive';\r\nimport { IsbnHeaderValidDirective } from './validtors/isbn-header-valid.directive';\r\nimport { FloatOnlyValidtorDirective } from './validtors/float-only-validtor.directive';\r\nimport { MprFormGroupDirective } from './directives/form-group.directive';\r\nimport { MprFormDirective } from './directives/form.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    FormControlValidComponent,\r\n    FormValidMsgDirective,\r\n    IsbnValidtorDirective,\r\n    IsbnPartValidDirective,\r\n    IsbnHeaderValidDirective,\r\n    FloatOnlyValidtorDirective,\r\n    MprFormGroupDirective,\r\n    MprFormDirective\r\n  ],\r\n  exports: [\r\n    FormControlValidComponent,\r\n    FormValidMsgDirective,\r\n    IsbnValidtorDirective,\r\n    IsbnPartValidDirective,\r\n    IsbnHeaderValidDirective,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    FloatOnlyValidtorDirective,\r\n    MprFormGroupDirective,\r\n    MprFormDirective\r\n  ],\r\n  providers: [\r\n    GlobalValidService,\r\n    FormValidMsgService\r\n  ]\r\n})\r\nexport class FormValidModule { }\r\n","export { FormValidModule } from './lib/form-valid.module';\r\nexport { GlobalValidService } from './lib/services/global-valid.service';\r\nexport { globalValidMsgServ } from './lib/services/global-valid-msg.service';\r\nexport { FormValidMsgService } from './lib/services/form-valid-msg.service';\r\nexport { FormControlValidComponent } from './lib/form-control-valid/form-control-valid.component';\r\nexport { FloatOnlyValidtorDirective } from './lib/validtors/float-only-validtor.directive';\r\nexport { IsbnHeaderValidDirective } from './lib/validtors/isbn-header-valid.directive';\r\nexport { IsbnPartValidDirective } from './lib/validtors/isbn-part-valid.directive';\r\nexport { IsbnValidtorDirective, ISBN } from './lib/validtors/isbn-validtor.directive';\r\n//export { FormValidMsgDirective } from './lib/directives/form-valid-msg.directive';\r\n"],"names":[],"mappings":"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"}
